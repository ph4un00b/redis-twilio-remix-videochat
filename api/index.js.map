{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/home/ph4u20/projects/hasura-remix-twilio/app/root.tsx", "/home/ph4u20/projects/hasura-remix-twilio/app/routes/access/token.ts", "../utils/access_token.server.ts", "/home/ph4u20/projects/hasura-remix-twilio/app/routes/home.tsx", "../app/components/molecules/ContentBlock.tsx", "../app/components/organisms/RoomLogin.tsx", "../app/components/atoms/FormCard.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from '@remix-run/node'\nimport { RemixServer } from '@remix-run/react'\nimport { renderToString } from 'react-dom/server'\n\nexport default function handleRequest (\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  )\n\n  responseHeaders.set('Content-Type', 'text/html')\n\n  return new Response('<!DOCTYPE html>' + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders\n  })\n}\n", "import type { MetaFunction } from '@remix-run/node'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration\n} from '@remix-run/react'\n\nimport __dev_styles__ from '../styles/development.css'\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'meeting app',\n  viewport: 'width=device-width,initial-scale=1'\n})\n\nexport function links () {\n  return [\n    { rel: 'stylesheet', href: __dev_styles__ }, /* todo: rm on prod */\n    { rel: 'stylesheet', href: 'https://cdn.jsdelivr.net/npm/daisyui@2.14.3/dist/full.css' }\n  ]\n}\n\nexport default function App () {\n  return (\n    <html lang='en'>\n      <head>\n        <Meta />\n        <Links />\n        <script src='https://cdn.tailwindcss.com' />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  )\n}\n", "import { ActionFunction } from '@remix-run/server-runtime'\nimport makeToken from 'utils/access_token.server'\n\n// export async function loader() {\n//   return new Response(JSON.stringify(jwt), {\n//     status: 200,\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   });\n// }\n\nexport const action: ActionFunction = async ({\n  request\n}) => {\n  const { identity, room } = await request.json()\n  switch (request.method) {\n    case 'POST': {\n      return new Response(JSON.stringify(makeToken(identity, room)), {\n        status: 200,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n    }\n    case 'PUT': { }\n    case 'PATCH': { }\n    case 'DELETE': { }\n  }\n}\n", "import AccessToken from 'twilio/lib/jwt/AccessToken'\nimport * as yup from 'yup'\n// import { InferType } from 'yup'\n\nexport default function makeToken (user: string, room: string) {\n  const VideoGrant = AccessToken.VideoGrant\n\n  const schema = yup.object().shape({\n    TWILIO_ACCOUNT_SID: yup.string().required(),\n    TWILIO_API_KEY: yup.string().required(),\n    TWILIO_API_SECRET: yup.string().required()\n  })\n\n  // Used when generating any kind of tokens\n  // To set up environmental variables, see http://twil.io/secure\n  const env = schema.validateSync({\n    TWILIO_ACCOUNT_SID: process.env.TWILIO_ACCOUNT_SID,\n    TWILIO_API_KEY: process.env.TWILIO_API_KEY,\n    TWILIO_API_SECRET: process.env.TWILIO_API_SECRET\n  })\n\n  // type Twilio = InferType<typeof schema>;\n  const identity = user\n\n  // Create Video Grant\n  const videoGrant = new VideoGrant({\n    room\n  })\n\n  // Create an access token which we will sign and return to the client,\n  // containing the grant we just created\n  const token = new AccessToken(\n    env.TWILIO_ACCOUNT_SID,\n    env.TWILIO_API_KEY,\n    env.TWILIO_API_SECRET,\n    { identity: identity }\n  )\n  token.addGrant(videoGrant)\n  return token.toJwt()\n}\n", "import { useActionData } from '@remix-run/react'\nimport makeToken from 'utils/access_token.server'\nimport ContentBlock from '~/components/molecules/ContentBlock'\nimport { Header, Footer, RoomLogin, Room } from '~/components/organisms/RoomLogin'\nimport * as yup from 'yup'\n\nexport async function action ({ request }: { request: Request }) {\n  const form = await request.formData()\n  const entries = Object.fromEntries(form)\n\n  const schema = yup.object({\n    user: yup.string().min(4)\n      .required('user is a required field'),\n    room: yup.string().min(4)\n      .required('room is a required field')\n  })\n\n  let data\n  // try {\n    data = await schema.validate(entries, { abortEarly: false })\n  // } catch (errors) {\n  //   if (errors instanceof yup.ValidationError) {\n  //     const { inner: innerErrors } = errors\n  //     const flashErrors = {} as any\n\n  //     for (const error of innerErrors) {\n  //       if (error.path && flashErrors[error.path] === undefined) {\n  //         flashErrors[error.path] = error.message\n  //       }\n  //     }\n\n  //     console.log(flashErrors)\n  //     return { flashErrors }\n  //   } else {\n  //     return { flashErrors: true }\n  //   }\n  // }\n\n  const resp = JSON.stringify(\n    makeToken(data.user, data.room)\n  )\n\n  console.log('resp', resp)\n\n  return new Response(JSON.stringify(resp), {\n    status: 200,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n}\n\nexport default function Index () {\n  const token = useActionData()\n\n  // todo: buscar info si remix usa flash errors\n  // a la rails\n  const RoomOrLogin = (\n    token && !token.flashErrors\n      ? (\n        <Room\n          roomname={'1q2w3e'}\n          token={token}\n          handleLogout={() => {}}\n        />\n        )\n      : <RoomLogin />\n  )\n\n  return (\n    <ContentBlock>\n      <Header />\n      {RoomOrLogin}\n      <Footer />\n    </ContentBlock>\n  )\n}\n", "import { ReactNode } from 'react'\n\nconst linearGradient = {\n  background: 'linear-gradient(to bottom right, #3232AB 62%, #F3F4F6 62%)'\n}\n\nexport default function ContentBlock ({ children }: { children: ReactNode }) {\n  return (\n    <div className='drawer drawer-mobile'>\n      <input id='my-drawer-3' type='checkbox' className='drawer-toggle' />\n      <div className='drawer-content flex flex-col'>\n        <section className='grid grid-rows-[8rem_1fr_8rem] bg-gray-500'>\n          {children}\n        </section>\n      </div>\n    </div>\n  )\n}\n", "import { ChangeEvent, ChangeEventHandler, FormEvent, FormEventHandler, useEffect as useSync, useRef, useState } from 'react'\nimport * as Video from 'twilio-video'\nimport FormCard from '../atoms/FormCard'\n\nexport function Header () {\n  return (\n    <header className='text-center pt-16'>\n      <h1 className='text-2xl capitalize'>room</h1>\n    </header>\n  )\n}\n\ntype ChangeOpts = ChangeEvent<HTMLInputElement>\n\nexport function RoomLogin () {\n  const [username, setUsername] = useState('')\n  const [roomname, setRoomName] = useState('')\n\n  function handleUsername (event: ChangeOpts) {\n    setUsername(event.target.value)\n  }\n\n  function handleRoomName (event: ChangeOpts) {\n    setRoomName(event.target.value)\n  }\n\n  return (\n    <FormCard gridRows='grid-rows-3'>\n\n      <div className='col-span-6 col-start-2 w-full form-control'>\n        <label className='label'>\n          <span className='label-text'>user</span>\n        </label>\n        <input\n          onChange={handleUsername}\n          value={username}\n          type='text'\n          name='user'\n          placeholder='Type here'\n          className='input input-bordered input-success w-full max-w-xs'\n        />\n      </div>\n\n      <div className='col-span-6 col-start-2 w-full form-control'>\n        <label className='label'>\n          <span className='label-text'>room</span>\n        </label>\n        <input\n          onChange={handleRoomName}\n          value={roomname}\n          type='text'\n          name='room'\n          placeholder='Type here'\n          className='input input-bordered input-success w-full max-w-xs'\n        />\n      </div>\n\n      <div className='flex flex-row col-span-8 justify-center items-center pb-3'>\n        <button\n          type='submit'\n          className='btn btn-primary'\n        >\n          JOIN\n        </button>\n      </div>\n\n    </FormCard>\n  )\n}\n\nexport function Footer () {\n  return (\n    <footer className='text-center pt-20'>\n      <p className='text-2xl'>foot</p>\n    </footer>\n  )\n}\n\n// interface Lobby {handleSubmit: FormEventHandler, handleRoomNameChange: ChangeEventHandler, handleUsernameChange: ChangeEventHandler, username: string, roomname: string}\n\n// interface ParticipantOpts { participant: Video.Participant }\n\ninterface RoomOpts {roomname: string, token: string, handleLogout: FormEventHandler}\n\nexport function Room ({ roomname, token, handleLogout }: RoomOpts) {\n  const [room, setRoom] = useState<Video.Room | null>(null)\n  const [participants, setParticipants] = useState<Video.Participant[]>([])\n\n  const remoteParticipants = <>{participants.map(participant => <ParticipantStreams key={participant.sid} participant={participant} />)}</>\n\n  useSync(function () {\n    function participantConnected (participant: Video.Participant) {\n      console.log(participant)\n      setParticipants(function (prevParticipants) {\n        return [...prevParticipants, participant]\n      })\n    }\n    function participantDisconnected (participant: Video.Participant) {\n      setParticipants(function (prevParticipants) {\n        return prevParticipants.filter(function (p) {\n          return p !== participant\n        })\n      })\n    }\n\n    Video.connect(token, {\n      name: roomname\n    }).then(function (room) {\n      setRoom(room)\n      room.on('participantConnected', participantConnected)\n      room.on('participantDisconnected', participantDisconnected)\n      room.participants.forEach(participantConnected)\n    })\n\n    return function () {\n      setRoom(function (currentRoom) {\n        if ((currentRoom != null) && currentRoom.localParticipant.state === 'connected') {\n          currentRoom.localParticipant.tracks.forEach(function (trackPublication) {\n            trackPublication.track.removeAllListeners()\n          })\n\n          currentRoom.disconnect()\n          return null\n        } else {\n          return currentRoom\n        }\n      })\n    }\n  }, [roomname, token])\n\n  console.log('token', token)\n  return (\n    <div className='room'>\n      <h2>Room: {roomname}</h2>\n      <p>Online: {(room != null) ? room.participants.size + 1 : ''}</p>\n      <button onClick={handleLogout}>Log out</button>\n      <div className='local-participant'>\n        local?: {(room != null) ? <ParticipantStreams key={room.localParticipant.sid} participant={room.localParticipant} /> : ''}\n      </div>\n      <h3>Remote Participants</h3>\n      <div className='remote-participants'>{remoteParticipants}</div>\n    </div>\n  )\n}\n\nfunction ParticipantStreams ({ participant }: {participant: Video.Participant}) {\n  const [videoTracks, setVideoTracks] = useState<any[]>([])\n  const [audioTracks, setAudioTracks] = useState<any[]>([])\n\n  const videoRef = useRef<HTMLVideoElement | null>(null)\n  const audioRef = useRef<HTMLAudioElement | null>(null)\n\n  function trackpubsToTracks (trackMap: Map<string, Video.AudioTrackPublication> | Map<string, Video.VideoTrackPublication>) {\n    return Array.from<Video.AudioTrackPublication | Video.VideoTrackPublication>(trackMap.values())\n      .map(publication => publication.track)\n      .filter(track => track !== null)\n  }\n\n  useSync(() => {\n    function trackSubscribed (track: Video.LocalTrack) {\n      if (track.kind === 'video') {\n        setVideoTracks(videoTracks => [...videoTracks, track])\n      } else {\n        setAudioTracks(audioTracks => [...audioTracks, track])\n      }\n    }\n\n    function trackUnsubscribed (track: Video.LocalTrack) {\n      if (track.kind === 'video') {\n        setVideoTracks(videoTracks => videoTracks.filter(v => v !== track))\n      } else {\n        setAudioTracks(audioTracks => audioTracks.filter(a => a !== track))\n      }\n    }\n\n    setVideoTracks(trackpubsToTracks(participant.videoTracks))\n    setAudioTracks(trackpubsToTracks(participant.audioTracks))\n\n    participant.on('trackSubscribed', trackSubscribed)\n    participant.on('trackUnsubscribed', trackUnsubscribed)\n\n    return () => {\n      setVideoTracks([])\n      setAudioTracks([])\n      participant.removeAllListeners()\n    }\n  }, [participant.identity])\n\n  useSync(() => {\n    const [videoTrack]: Video.LocalVideoTrack[] = videoTracks\n    if (videoTrack) {\n      videoTrack.attach(videoRef.current!)\n      return () => { videoTrack.detach() }\n    }\n    // to event handler?\n  }, [videoTracks])\n\n  useSync(() => {\n    const [audiotrack]: Video.LocalAudioTrack[] = audioTracks\n    if (audiotrack) {\n      audiotrack.attach(audioRef.current!)\n      return () => { audiotrack.detach() }\n    }\n    // to event handler?\n  }, [audioTracks])\n\n  return (\n    <div className='participant'>\n      <h3>nickname: {participant.identity}</h3>\n      <video ref={videoRef} autoPlay />\n      <audio ref={audioRef} autoPlay muted />\n    </div>\n  )\n}\n", "import { Form } from '@remix-run/react'\nimport { FormEventHandler, ReactNode } from 'react'\n\ninterface FormOpts {\n  children: ReactNode\n  gridRows?: string\n  onSubmitHandler?: FormEventHandler<HTMLFormElement>\n}\n\nexport default function FormCard ({ children, onSubmitHandler, gridRows = 'grid-rows-1' }: FormOpts) {\n  return (\n    <Form\n      method='post'\n      noValidate\n      onSubmit={onSubmitHandler}\n      tabIndex={0}\n      className={`card grid ${gridRows} grid-cols-8 w-[36rem] h-[36rem] bg-base-100 shadow-xl inset-0 m-auto`}\n    >\n      {children}\n    </Form>\n  )\n}\n", "export default {'version':'d3663666','entry':{'module':'/build/entry.client-W2HXBJWK.js','imports':['/build/_shared/chunk-W6VCQEUN.js','/build/_shared/chunk-XV23MX66.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-TWXGWV6M.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/access/token':{'id':'routes/access/token','parentId':'root','path':'access/token','index':undefined,'caseSensitive':undefined,'module':'/build/routes/access/token-P4Q7UGCA.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/home':{'id':'routes/home','parentId':'root','path':'home','index':undefined,'caseSensitive':undefined,'module':'/build/routes/home-SDM4V6QP.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-D3663666.js'};", "\nimport * as entryServer from \"/home/ph4u20/projects/hasura-remix-twilio/app/entry.server.tsx\";\nimport * as route0 from \"/home/ph4u20/projects/hasura-remix-twilio/app/root.tsx\";\nimport * as route1 from \"/home/ph4u20/projects/hasura-remix-twilio/app/routes/access/token.ts\";\nimport * as route2 from \"/home/ph4u20/projects/hasura-remix-twilio/app/routes/home.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/access/token\": {\n      id: \"routes/access/token\",\n      parentId: \"root\",\n      path: \"access/token\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/home\": {\n      id: \"routes/home\",\n      parentId: \"root\",\n      path: \"home\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": []
}
