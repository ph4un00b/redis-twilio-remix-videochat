{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/home/ph4u20/projects/hasura-remix-twilio/app/root.tsx", "/home/ph4u20/projects/hasura-remix-twilio/app/routes/auth/github/callback.tsx", "../app/services/auth.server.ts", "../app/services/sessions.server.ts", "../sessions/redis.server.ts", "/home/ph4u20/projects/hasura-remix-twilio/app/routes/auth/github/access.tsx", "/home/ph4u20/projects/hasura-remix-twilio/app/routes/access/token.ts", "../app/services/access_token.server.ts", "/home/ph4u20/projects/hasura-remix-twilio/app/routes/chat/$chatId.tsx", "/home/ph4u20/projects/hasura-remix-twilio/app/routes/private.tsx", "/home/ph4u20/projects/hasura-remix-twilio/app/routes/login.tsx", "/home/ph4u20/projects/hasura-remix-twilio/app/routes/video.tsx", "../app/components/molecules/ContentBlock.tsx", "../app/components/organisms/RoomLogin.tsx", "../app/components/atoms/FormCard.tsx", "../app/validations/room-login.server.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from '@remix-run/node'\nimport { RemixServer } from '@remix-run/react'\nimport { renderToString } from 'react-dom/server'\n\nexport default function handleRequest (\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  )\n\n  responseHeaders.set('Content-Type', 'text/html')\n\n  return new Response('<!DOCTYPE html>' + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders\n  })\n}\n", "import type { MetaFunction } from '@remix-run/node'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration\n} from '@remix-run/react'\n\nimport __dev_styles__ from '../styles/development.css'\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'meeting app',\n  viewport: 'width=device-width,initial-scale=1'\n})\n\nexport function links () {\n  return [\n    { rel: 'stylesheet', href: __dev_styles__ }, /* todo: rm on prod */\n    { rel: 'stylesheet', href: 'https://cdn.jsdelivr.net/npm/daisyui@2.14.3/dist/full.css' }\n  ]\n}\n\nexport default function App () {\n  return (\n    <html lang='en'>\n      <head>\n        <Meta />\n        <Links />\n        <script src='https://cdn.tailwindcss.com' />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  )\n}\n", "import { LoaderFunction } from '@remix-run/node'\nimport { auth } from '~/services/auth.server'\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return await auth.authenticate('github', request, {\n    successRedirect: '/private',\n    failureRedirect: '/login'\n  })\n}\n", "import * as yup from 'yup'\nimport { Authenticator } from 'remix-auth'\nimport { GitHubExtraParams, GitHubProfile, GitHubStrategy } from 'remix-auth-github'\nimport { storage } from './sessions.server'\n\nconst schema = yup.object().shape({\n  GITHUB_CLIENT_ID: yup.string().required(),\n  GITHUB_CLIENT_SECRET: yup.string().required()\n})\n\nconst env = schema.validateSync({\n  GITHUB_CLIENT_ID: process\n    .env.GITHUB_CLIENT_ID,\n  GITHUB_CLIENT_SECRET: process\n    .env.GITHUB_CLIENT_SECRET\n})\n\nconst gitHubStrategy = new GitHubStrategy(\n  {\n    clientID: env.GITHUB_CLIENT_ID,\n    clientSecret: env.GITHUB_CLIENT_SECRET,\n    callbackURL: 'http://localhost:3000/auth/github/callback'\n  },\n  async ({ accessToken, extraParams, profile }) => {\n    // Get the user data from your DB or API using the tokens and profile\n    // return User.findOrCreate({ email: profile.emails[0].value });\n    console.log({ profile })\n    return { profile, accessToken, extraParams }\n  }\n)\n\n// export const authenticator = new Authenticator(storage)\nexport const auth = new Authenticator<{\n  profile: GitHubProfile\n  accessToken: string\n  extraParams: GitHubExtraParams\n}>(storage)\n\nauth.use(gitHubStrategy)", "import { createCookie, createFileSessionStorage } from '@remix-run/node'\nimport { createRedisStorage, EXPIRATION_IN_SECONDS } from 'sessions/redis.server'\nimport * as yup from 'yup'\n\nconst schema = yup.object().shape({\n  COOKIE_SECRET: yup\n    .string()\n    .min(32)\n    .required()\n})\n\nconst env = schema.validateSync({\n  COOKIE_SECRET: process\n    .env.COOKIE_SECRET\n})\n\nconst expires = new Date()\nconst seconds =\n  expires.getSeconds() + EXPIRATION_IN_SECONDS\nexpires.setSeconds(seconds)\n\nconst cookie = createCookie('__HOLA__', {\n  secrets: [env.COOKIE_SECRET],\n  sameSite: 'lax',\n  expires,\n  httpOnly: true,\n  secure: process.env.NODE_ENV === 'production'\n})\n\nexport const storage = (process.env.NODE_ENV === 'development')\n  ? createFileSessionStorage({\n    cookie,\n    dir: './sessions/store'\n  })\n  : createRedisStorage({ cookie })\n\nexport const { getSession, commitSession, destroySession } = storage\n", "// sessions/upstash.server.ts\n\nimport { Cookie, createSessionStorage } from '@remix-run/node'\nimport { Redis } from '@upstash/redis'\nimport * as crypto from 'crypto'\nimport * as yup from 'yup'\n\nexport const EXPIRATION_IN_SECONDS = 60\n\nconst schema = yup.object().shape({\n  UPSTASH_REDIS_REST_URL: yup\n    .string()\n    .url()\n    .required(),\n  UPSTASH_REDIS_REST_TOKEN: yup\n    .string()\n    .required()\n})\n\nconst env = schema.validateSync({\n  UPSTASH_REDIS_REST_URL: process\n    .env.UPSTASH_REDIS_REST_URL,\n  UPSTASH_REDIS_REST_TOKEN: process\n    .env.UPSTASH_REDIS_REST_TOKEN\n})\n\n// For more info check https://remix.run/docs/en/v1/api/remix#createsessionstorage\nexport function createRedisStorage ({ cookie }: { cookie: Cookie}) {\n  const redis = new Redis({\n    url: env.UPSTASH_REDIS_REST_URL,\n    token: env.UPSTASH_REDIS_REST_TOKEN\n  })\n\n  return createSessionStorage({\n    cookie,\n    async createData (data, expires) {\n      // Create a random id - taken from the core `createFileSessionStorage` Remix function.\n      const randomBytes = crypto.randomBytes(8)\n      const id = Buffer.from(randomBytes).toString('hex')\n      // Call Upstash Redis HTTP API. Set expiration according to the cookie `expired property.\n      await redis.setex(id, EXPIRATION_IN_SECONDS, JSON.stringify(data))\n\n      console.log('session#create')\n      return id\n    },\n    async readData (id) {\n      console.log('session#read', id)\n      return await redis.get(id)\n    },\n    async updateData (id, data, expires) {\n      await redis.setex(id, EXPIRATION_IN_SECONDS, JSON.stringify(data))\n      console.log('session#update')\n    },\n    async deleteData (id) {\n      await redis.del(id)\n\n      console.log('session#delete')\n    }\n  })\n}\n", "import { ActionFunction, LoaderFunction, redirect } from '@remix-run/node'\nimport { auth } from '~/services/auth.server'\n\nexport const loader: LoaderFunction = () => redirect('/login')\n\nexport const action: ActionFunction = async ({ request }) => {\n  return await auth.authenticate('github', request, {\n    successRedirect: '/private',\n    failureRedirect: '/login'\n  })\n}\n", "import { ActionFunction } from '@remix-run/server-runtime'\nimport makeToken from '~/services/access_token.server'\n\n// export async function loader() {\n//   return new Response(JSON.stringify(jwt), {\n//     status: 200,\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   });\n// }\n\nexport const action: ActionFunction = async ({\n  request\n}) => {\n  const { identity, room } = await request.json()\n  switch (request.method) {\n    case 'POST': {\n      return new Response(JSON.stringify(makeToken(identity, room)), {\n        status: 200,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n    }\n    case 'PUT': { }\n    case 'PATCH': { }\n    case 'DELETE': { }\n  }\n}\n", "import AccessToken from 'twilio/lib/jwt/AccessToken'\nimport * as yup from 'yup'\n// import { InferType } from 'yup'\n\nexport default function makeToken (user: string, room: string) {\n  const VideoGrant = AccessToken.VideoGrant\n\n  const schema = yup.object().shape({\n    TWILIO_ACCOUNT_SID: yup.string().required(),\n    TWILIO_API_KEY: yup.string().required(),\n    TWILIO_API_SECRET: yup.string().required()\n  })\n\n  // Used when generating any kind of tokens\n  // To set up environmental variables, see http://twil.io/secure\n  const env = schema.validateSync({\n    TWILIO_ACCOUNT_SID: process.env.TWILIO_ACCOUNT_SID,\n    TWILIO_API_KEY: process.env.TWILIO_API_KEY,\n    TWILIO_API_SECRET: process.env.TWILIO_API_SECRET\n  })\n\n  // type Twilio = InferType<typeof schema>;\n  const identity = user\n\n  // Create Video Grant\n  const videoGrant = new VideoGrant({\n    room\n  })\n\n  // Create an access token which we will sign and return to the client,\n  // containing the grant we just created\n  const token = new AccessToken(\n    env.TWILIO_ACCOUNT_SID,\n    env.TWILIO_API_KEY,\n    env.TWILIO_API_SECRET,\n    { identity: identity }\n  )\n  token.addGrant(videoGrant)\n  return token.toJwt()\n}\n", "import { ActionFunction, json, LoaderFunction } from '@remix-run/node'\nimport { useLoaderData, useParams } from '@remix-run/react'\nimport { Redis } from '@upstash/redis'\nimport { commitSession, getSession } from '~/services/sessions.server'\nimport * as yup from 'yup'\n\nexport const loader: LoaderFunction = async ({\n  params, request\n}) => {\n  const schema = yup.object().shape({\n    UPSTASH_REDIS_REST_URL: yup\n      .string()\n      .url()\n      .required(),\n    UPSTASH_REDIS_REST_TOKEN: yup\n      .string()\n      .required()\n  })\n\n  const env = schema.validateSync({\n    UPSTASH_REDIS_REST_URL: process\n      .env.UPSTASH_REDIS_REST_URL,\n    UPSTASH_REDIS_REST_TOKEN: process\n      .env.UPSTASH_REDIS_REST_TOKEN\n  })\n\n  const redis = new Redis({\n    url: env.UPSTASH_REDIS_REST_URL,\n    token: env.UPSTASH_REDIS_REST_TOKEN\n  })\n\n  const session = await getSession(request.headers.get('Cookie'))\n  const myStoredData = session.get('myStoredData')\n  console.log('my', myStoredData)\n  // If no session found (was never created or was expired) create a new session.\n  if (!myStoredData) {\n    session.set('myStoredData', 'Some data jamon!')\n\n    const headers = {\n      'Set-Cookie': await commitSession(session)\n    }\n\n    return json(\n      { message: 'Created new session' },\n      { headers }\n    )\n  }\n\n  console.log(params.chatId)\n  let chatUsers: string[] | null =\n    await redis.get('room:midu:users')\n\n  // init chat\n  if (chatUsers === null) {\n    chatUsers = []\n  }\n\n  // add user once\n  if (chatUsers.findIndex((v) => v === 'phau') < 0) {\n    chatUsers.push('phau')\n  }\n\n  await redis.set('room:midu:users', JSON.stringify(chatUsers))\n\n  console.log('chat-users', chatUsers)\n\n  return json({\n    message: `Showing Session info: ${myStoredData}`\n  })\n}\n\nexport const action: ActionFunction = async ({\n  params\n}) => {\n  console.log(params.chatId)\n}\n\nexport default function PostRoute () {\n  const params = useParams()\n  console.log(params.chatId)\n  // return <p>chat id</p>\n  const data = useLoaderData()\n  return <div>{data.message}</div>\n}\n", "import { ActionFunction, json, LoaderFunction } from '@remix-run/node'\nimport { Form, useLoaderData } from '@remix-run/react'\nimport { GitHubProfile } from 'remix-auth-github'\nimport { auth } from '~/services/auth.server'\n\ninterface LoaderData { profile: GitHubProfile }\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const profile = await auth.isAuthenticated(request, {\n    failureRedirect: '/login'\n  })\n\n  return json<LoaderData>(profile)\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  await auth.logout(request, { redirectTo: '/login' })\n}\n\nexport default function Screen () {\n  const data = useLoaderData()\n  return (\n    <>\n      <Form method='post'>\n        <button>Log Out</button>\n      </Form>\n\n      <hr />\n\n      <pre>\n        <code>{JSON.stringify(data, null, 2)}</code>\n      </pre>\n    </>\n  )\n}\n", "import { ActionFunction, json, LoaderFunction } from '@remix-run/node'\nimport { Form, useLoaderData } from '@remix-run/react'\nimport { auth } from '~/services/auth.server'\nimport { getSession } from '~/services/sessions.server'\n\ninterface LoaderData {\n  error: { message: string } | null\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await auth.isAuthenticated(request, {\n    successRedirect: '/private'\n  })\n\n  const session = await getSession(\n    request.headers.get('Cookie')\n  )\n\n  const error = session.get(auth.sessionErrorKey) as LoaderData['error']\n  return json<LoaderData>({ error })\n}\n\nexport const action: ActionFunction = async ({ request, context }) => {\n  const resp = await auth.authenticate('github', request, {\n    successRedirect: '/private',\n    failureRedirect: '/login',\n    throwOnError: true,\n    context\n  })\n\n  console.log(resp)\n  return resp\n}\n\nexport default function Login () {\n  const { error } = useLoaderData<LoaderData>()\n\n  return (\n    <Form method='post' className='grid place-items-center'>\n      {(error != null) && <div>{error.message}</div>}\n      <button>Login with GitHub</button>\n    </Form>\n  )\n}\n", "import ContentBlock from '~/components/molecules/ContentBlock'\nimport { Header, Footer, RoomLogin } from '~/components/organisms/RoomLogin'\nimport { redirect } from '@remix-run/node'\nimport { useActionData } from '@remix-run/react'\nimport { keyValuesFrom, validateRoom } from '~/validations/room-login.server'\n\nexport async function action ({ request }: { request: Request }) {\n  const entries = await keyValuesFrom(request)\n  const [, errors] = await validateRoom(entries)\n  if (errors) return errors\n  return redirect('/chat/midu')\n}\n\nexport default function Index () {\n  // todo: look for remix flash errors ala ruby on rails\n  const errors = useActionData()\n\n  return (\n    <ContentBlock>\n      <Header errors={errors?.messages} />\n      <RoomLogin defaults={errors?.values} />\n      <Footer />\n    </ContentBlock>\n  )\n}\n", "import { ReactNode } from 'react'\n\nconst linearGradient = {\n  background: 'linear-gradient(to bottom right, #3232AB 62%, #F3F4F6 62%)'\n}\n\nexport default function ContentBlock ({ children }: { children: ReactNode }) {\n  return (\n    <div className='drawer drawer-mobile'>\n      <input id='my-drawer-3' type='checkbox' className='drawer-toggle' />\n      <div className='drawer-content flex flex-col'>\n        <section className='grid grid-rows-[8rem_1fr_8rem] bg-gray-500'>\n          {children}\n        </section>\n      </div>\n    </div>\n  )\n}\n", "import { ChangeEvent, ChangeEventHandler, FormEvent, FormEventHandler, useEffect as useSync, useRef, useState } from 'react'\nimport * as Video from 'twilio-video'\nimport FormCard from '../atoms/FormCard'\n\nexport function Header ({ errors }: {errors: any}) {\n  return (\n    <header className='text-center pt-16'>\n      <pre>{JSON.stringify(errors, undefined, 2)}</pre>\n    </header>\n  )\n}\n\ntype ChangeOpts = ChangeEvent<HTMLInputElement>\n\nexport function RoomLogin ({ defaults }: {defaults: any}) {\n  const [username, setUsername] = useState(defaults?.user)\n  const [roomname, setRoomname] = useState('')\n  const [token, setToken] = useState(undefined)\n\n  function handleUsername (event: ChangeOpts) {\n    setUsername(event.target.value)\n  }\n\n  function handleRoomName (event: ChangeOpts) {\n    setRoomname(event.target.value)\n  }\n\n  async function handleSubmit (event: FormEvent<HTMLFormElement>) {\n    event.preventDefault()\n    const data = await fetch('/access/token', {\n      method: 'POST',\n      body: JSON.stringify({\n        identity: username,\n        room: roomname\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(async res => await res.json()).catch(console.error)\n\n    setToken(data)\n    console.log('set token')\n  }\n\n  if (token) {\n    return (\n      <Room\n        roomname={roomname}\n        token={token}\n        handleLogout={() => { setToken(undefined) }}\n      />\n    )\n  }\n\n  return (\n    <FormCard onSubmitHandler={handleSubmit} gridRows='grid-rows-3'>\n\n      <div className='col-span-6 col-start-2 w-full form-control'>\n        <label className='label'>\n          <span className='label-text'>user</span>\n        </label>\n        <input\n          onChange={handleUsername}\n          value={username}\n          type='text'\n          name='user'\n          placeholder='Type here'\n          className='input input-bordered input-success w-full max-w-xs'\n        />\n      </div>\n\n      <div className='col-span-6 col-start-2 w-full form-control'>\n        <label className='label'>\n          <span className='label-text'>room</span>\n        </label>\n        <input\n          onChange={handleRoomName}\n          value={roomname}\n          type='text'\n          name='room'\n          placeholder='Type here'\n          className='input input-bordered input-success w-full max-w-xs'\n        />\n      </div>\n\n      <div className='flex flex-row col-span-8 justify-center items-center pb-3'>\n        <button\n          type='submit'\n          className='btn btn-primary'\n        >\n          JOIN\n        </button>\n      </div>\n\n    </FormCard>\n  )\n}\n\nexport function Footer () {\n  return (\n    <footer className='text-center pt-20'>\n      <p className='text-2xl'>foot</p>\n    </footer>\n  )\n}\n\n// interface Lobby {handleSubmit: FormEventHandler, handleRoomNameChange: ChangeEventHandler, handleUsernameChange: ChangeEventHandler, username: string, roomname: string}\n\n// interface ParticipantOpts { participant: Video.Participant }\n\ninterface RoomOpts {roomname: string, token: string, handleLogout: FormEventHandler}\n\nexport function Room ({ roomname, token, handleLogout }: RoomOpts) {\n  const [room, setRoom] = useState<Video.Room | null>(null)\n  const [participants, setParticipants] = useState<Video.Participant[]>([])\n\n  const remoteParticipants = <>{participants.map(participant => <ParticipantStreams key={participant.sid} participant={participant} />)}</>\n\n  useSync(function () {\n    function participantConnected (participant: Video.Participant) {\n      console.log(participant)\n      setParticipants(function (prevParticipants) {\n        return [...prevParticipants, participant]\n      })\n    }\n    function participantDisconnected (participant: Video.Participant) {\n      setParticipants(function (prevParticipants) {\n        return prevParticipants.filter(function (p) {\n          return p !== participant\n        })\n      })\n    }\n\n    Video.connect(token, {\n      name: roomname\n    }).then(function (room) {\n      setRoom(room)\n      room.on('participantConnected', participantConnected)\n      room.on('participantDisconnected', participantDisconnected)\n      room.participants.forEach(participantConnected)\n    })\n\n    return function () {\n      setRoom(function (currentRoom) {\n        if ((currentRoom != null) && currentRoom.localParticipant.state === 'connected') {\n          currentRoom.localParticipant.tracks.forEach(function (trackPublication) {\n            trackPublication.track.removeAllListeners()\n          })\n\n          currentRoom.disconnect()\n          return null\n        } else {\n          return currentRoom\n        }\n      })\n    }\n  }, [roomname, token])\n\n  console.log('token', token)\n  return (\n    <div className='room'>\n      <h2>Room: {roomname}</h2>\n      <p>Online: {(room != null) ? room.participants.size + 1 : ''}</p>\n      <button onClick={handleLogout}>Log out</button>\n      <div className='local-participant'>\n        local?: {(room != null) ? <ParticipantStreams key={room.localParticipant.sid} participant={room.localParticipant} /> : ''}\n      </div>\n      <h3>Remote Participants</h3>\n      <div className='remote-participants'>{remoteParticipants}</div>\n    </div>\n  )\n}\n\nfunction ParticipantStreams ({ participant }: {participant: Video.Participant}) {\n  const [videoTracks, setVideoTracks] = useState<any[]>([])\n  const [audioTracks, setAudioTracks] = useState<any[]>([])\n\n  const videoRef = useRef<HTMLVideoElement | null>(null)\n  const audioRef = useRef<HTMLAudioElement | null>(null)\n\n  function trackpubsToTracks (trackMap: Map<string, Video.AudioTrackPublication> | Map<string, Video.VideoTrackPublication>) {\n    return Array.from<Video.AudioTrackPublication | Video.VideoTrackPublication>(trackMap.values())\n      .map(publication => publication.track)\n      .filter(track => track !== null)\n  }\n\n  useSync(() => {\n    function trackSubscribed (track: Video.LocalTrack) {\n      if (track.kind === 'video') {\n        setVideoTracks(videoTracks => [...videoTracks, track])\n      } else {\n        setAudioTracks(audioTracks => [...audioTracks, track])\n      }\n    }\n\n    function trackUnsubscribed (track: Video.LocalTrack) {\n      if (track.kind === 'video') {\n        setVideoTracks(videoTracks => videoTracks.filter(v => v !== track))\n      } else {\n        setAudioTracks(audioTracks => audioTracks.filter(a => a !== track))\n      }\n    }\n\n    setVideoTracks(trackpubsToTracks(participant.videoTracks))\n    setAudioTracks(trackpubsToTracks(participant.audioTracks))\n\n    participant.on('trackSubscribed', trackSubscribed)\n    participant.on('trackUnsubscribed', trackUnsubscribed)\n\n    return () => {\n      setVideoTracks([])\n      setAudioTracks([])\n      participant.removeAllListeners()\n    }\n  }, [participant.identity])\n\n  useSync(() => {\n    const [videoTrack]: Video.LocalVideoTrack[] = videoTracks\n    if (videoTrack) {\n      videoTrack.attach(videoRef.current!)\n      return () => { videoTrack.detach() }\n    }\n    // usar en event handler?\n  }, [videoTracks])\n\n  useSync(() => {\n    const [audiotrack]: Video.LocalAudioTrack[] = audioTracks\n    if (audiotrack) {\n      audiotrack.attach(audioRef.current!)\n      return () => { audiotrack.detach() }\n    }\n    // usar en event handler?\n  }, [audioTracks])\n\n  return (\n    <div className='participant'>\n      <h3>nickname: {participant.identity}</h3>\n      <video ref={videoRef} autoPlay />\n      <audio ref={audioRef} autoPlay muted />\n    </div>\n  )\n}\n", "import { Form } from '@remix-run/react'\nimport { FormEventHandler, ReactNode } from 'react'\n\ninterface FormOpts {\n  children: ReactNode\n  gridRows?: string\n  onSubmitHandler?: FormEventHandler<HTMLFormElement>\n}\n\nexport default function FormCard ({ children, onSubmitHandler, gridRows = 'grid-rows-1' }: FormOpts) {\n  return (\n    <Form\n      method='post'\n      noValidate\n      onSubmit={onSubmitHandler}\n      tabIndex={0}\n      className={`card grid ${gridRows} grid-cols-8 w-[36rem] h-[36rem] bg-base-100 shadow-xl inset-0 m-auto`}\n    >\n      {children}\n    </Form>\n  )\n}\n", "import * as yup from 'yup'\n\nexport async function keyValuesFrom (request: Request) {\n  const form = await request.formData()\n  const entries = Object.fromEntries(form)\n  return entries\n}\n\nexport async function validateRoom (formdata: { [k: string]: FormDataEntryValue }) {\n  const schema = yup.object({\n    user: yup.string().min(4)\n      .required('user is a required field'),\n    room: yup.string().min(4)\n      .required('room is a required field')\n  })\n\n  try {\n    const shape = await schema.validate(formdata, { abortEarly: false })\n    return [shape, undefined]\n  } catch (errors) {\n    if (errors instanceof yup.ValidationError) {\n      const { inner: innerErrors, value: values } = errors\n      const messages = {} as any\n\n      for (const error of innerErrors) {\n        if (error.path && messages[error.path] === undefined) {\n          messages[error.path] = error.message\n        }\n      }\n\n      console.log(messages)\n      const errs = { messages, values }\n      return [undefined, errs]\n    }\n\n    return [undefined, true]\n  }\n}\n", "export default {'version':'22ea2cc7','entry':{'module':'/build/entry.client-VTXGVH5Z.js','imports':['/build/_shared/chunk-JZ3MUYO7.js','/build/_shared/chunk-XV23MX66.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-GYZUFVMY.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/access/token':{'id':'routes/access/token','parentId':'root','path':'access/token','index':undefined,'caseSensitive':undefined,'module':'/build/routes/access/token-P4Q7UGCA.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/github/access':{'id':'routes/auth/github/access','parentId':'root','path':'auth/github/access','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/github/access-5E3EWLTR.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/github/callback':{'id':'routes/auth/github/callback','parentId':'root','path':'auth/github/callback','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/github/callback-EHHP6O4D.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/chat/$chatId':{'id':'routes/chat/$chatId','parentId':'root','path':'chat/:chatId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/chat/$chatId-ILDHFTPA.js','imports':['/build/_shared/chunk-5XM4TFUQ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-AVXRZRQJ.js','imports':['/build/_shared/chunk-5XM4TFUQ.js','/build/_shared/chunk-VURS4OIO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/private':{'id':'routes/private','parentId':'root','path':'private','index':undefined,'caseSensitive':undefined,'module':'/build/routes/private-L7LEKZ3O.js','imports':['/build/_shared/chunk-VURS4OIO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/video':{'id':'routes/video','parentId':'root','path':'video','index':undefined,'caseSensitive':undefined,'module':'/build/routes/video-CC4MW5AQ.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-22EA2CC7.js'};", "\nimport * as entryServer from \"/home/ph4u20/projects/hasura-remix-twilio/app/entry.server.tsx\";\nimport * as route0 from \"/home/ph4u20/projects/hasura-remix-twilio/app/root.tsx\";\nimport * as route1 from \"/home/ph4u20/projects/hasura-remix-twilio/app/routes/auth/github/callback.tsx\";\nimport * as route2 from \"/home/ph4u20/projects/hasura-remix-twilio/app/routes/auth/github/access.tsx\";\nimport * as route3 from \"/home/ph4u20/projects/hasura-remix-twilio/app/routes/access/token.ts\";\nimport * as route4 from \"/home/ph4u20/projects/hasura-remix-twilio/app/routes/chat/$chatId.tsx\";\nimport * as route5 from \"/home/ph4u20/projects/hasura-remix-twilio/app/routes/private.tsx\";\nimport * as route6 from \"/home/ph4u20/projects/hasura-remix-twilio/app/routes/login.tsx\";\nimport * as route7 from \"/home/ph4u20/projects/hasura-remix-twilio/app/routes/video.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/auth/github/callback\": {\n      id: \"routes/auth/github/callback\",\n      parentId: \"root\",\n      path: \"auth/github/callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/auth/github/access\": {\n      id: \"routes/auth/github/access\",\n      parentId: \"root\",\n      path: \"auth/github/access\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/access/token\": {\n      id: \"routes/access/token\",\n      parentId: \"root\",\n      path: \"access/token\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/chat/$chatId\": {\n      id: \"routes/chat/$chatId\",\n      parentId: \"root\",\n      path: \"chat/:chatId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/private\": {\n      id: \"routes/private\",\n      parentId: \"root\",\n      path: \"private\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/video\": {\n      id: \"routes/video\",\n      parentId: \"root\",\n      path: \"video\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    }\n  };"],
  "mappings": "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",
  "names": []
}
